------------------------------------------------------------------------
--------------------------------- TP 1 ---------------------------------
------------------------------------------------------------------------

1.2) A)
etat_final_4x4([  [1, 2, 3, 4],
                  [5, 6, 7, 8],
                  [9, 10, 11, 12],
                  [13, 14, 15, vide] ]).
                  
1.2) B)
1 - Recuperer la ligne et la colonne respectivement dans L et C de d dans l'etat initial
2 - Recuperer la piece qui se trouve a la 3eme ligne et la 2eme colonne  a l'etat final

1.2) C)
initial_state(Ini), nth1(L,Ini,Ligne), nth1(C,Ligne,d), final_state(Fin), nth1(L,Fin,LigneF), nth1(C,LigneF,d).

1.2) D)
initial_state(Ini), rule(_,_,Ini,Next).

1.2) E)
findall(Next, (initial_state(Ini), rule(_,_,Ini,Next)), R).

1.2) F)
findall([A, Next], (initial_state(Ini), rule(A,_,Ini,Next)), R).

2.1) On a choisi la methode a :
   malplace(P, U, Final):-
      nth1(L,U,Ligne), nth1(C,Ligne,P), nth1(L,Final,LigneF), 
      nth1(C,LigneF,M), P\=M, P\=vide.

   heuristique1(U, H) :- 
      final_state(Final), findall(P, malplace(P, U,Final), Res), 
      length(Res, H).

2.2)
A finir



initial_state(I), final_state(F), malplace(P,I,F).
initial_state(I), heuristique1(I, H).
